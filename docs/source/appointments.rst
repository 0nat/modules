.. _appointments-module:

===================
Appointments Module
===================

.. contents::
    :depth: 3

###########
Description
###########

The module provides possibility to create appointments. Each appointment is associated with a specific person and contains information about
the planned visit. This module does not store the information about patients, or does not specify the way in which the patient receives a reminders
about their appointments. The Appointments module creates :std:ref:`for each appointment scheduled reminders <scheduled-reminders-label>` which sends
events at a specified time period. So the way in which patient is informed depends only on the manner in which you handled the event. You decide when
reminder will start and how often event will be fired, :std:ref:`you must simply set the appropriate parameters. <new-appointment-label>`

.. attention::

    This module requires an installed and enabled Scheduler module for scheduling reminders.

###########
Appointment
###########

Appointment fields
##################

Each appointment contains following fields:

+------------------+------------------------------------------------------------------------+--------------------------------------------------------+
|Field             |Description                                                             |Type                                                    |
+==================+========================================================================+========================================================+
|externalId        |External id of the person who is associated with this appointment.      |String                                                  |
|                  |This is an arbitrary value controlled by your application. It allows    |                                                        |
|                  |tying appointment reminders with patients at their fire time.           |                                                        |
+------------------+------------------------------------------------------------------------+--------------------------------------------------------+
|apptId            |Appointment id generated by the system                                  |String                                                  |
+------------------+------------------------------------------------------------------------+--------------------------------------------------------+
|appointmentDate   |Date for the appointment, events after this date will no longer be sent |org.joda.time.DateTime                                  |
+------------------+------------------------------------------------------------------------+--------------------------------------------------------+
|visitedDate       |Date of the fulfilled visit                                             |org.joda.time.DateTime                                  |
+------------------+------------------------------------------------------------------------+--------------------------------------------------------+
|status            |Appointment status                                                      |org.motechproject.appointments.domain.AppointmentStatus |
+------------------+------------------------------------------------------------------------+--------------------------------------------------------+
|sendReminders     |Flag to activate or deactivate sending reminders                        |bool                                                    |
+------------------+------------------------------------------------------------------------+--------------------------------------------------------+
|reminderInterval  |Reminder interval                                                       |org.joda.time.Period                                    |
+------------------+------------------------------------------------------------------------+--------------------------------------------------------+
|reminderStartTime |Time to start firing the reminder events                                |org.joda.time.DateTime                                  |
+------------------+------------------------------------------------------------------------+--------------------------------------------------------+

Appointment status
##################

Status can take one of the following values:

- NONE - default value for the appointment.
- MISSED - missed appointment.
- UNSCHEDULED - unscheduled visit to the clinic.
- VISITED - patient visited the clinic.
- CONFIRMED - appointment confirmed before the visit.
- REMOVED - appointment was canceled by the patient or provider.

Creating and Updating appointments
##################################

The obligation to create and update an appointments is on the side of implementation. The Appointment module provides the :std:ref:`OSGI service <osgi-service-label>`
to perform this operations. When :code:`appointmentDate` or :code:`status` will be changed then the old version of the appointment will be saved to the appointments logs.

.. attention::

    Please note that when you update :code:`sendReminders` to false value then reminders for this appointments will not be send


.. _scheduled-reminders-label:

###################
Scheduled reminders
###################

For each created appointment Scheduler module performs a period repeating job (job will start if value of the :code:`sendReminders` parameter is true).
This job is built on the basis of information contained in each appointment:

 - :code:`appointmentDate` - planned date of the visit(reminder end time).
 - :code:`reminderStartTime` - reminder start time.
 - :code:`reminderInterval` - the interval at which the reminders will be fired by the Scheduler module.

When a reminder triggers, an event will be sent with the Scheduler module will send event(:code:`org.motechproject.event.MotechEvent`) with following
subject :code:`Appointment.Reminder.{1}.{2}`. First parameter is patient external id, second is appointment id generated by the system.

.. _osgi-service-label:

################
OSGI Service API
################

The Appointments module exposes an OSGi services :code:`org.motechproject.appointments.service.AppointmentService` to perform common operations on
patients appointments. The service provides the following API:

- :code:`Appointment addAppointment(Appointment appointment)` - create a new appointment, :code:`externalId` param can't be null(it associates appointment with the patient).
- :code:`List<Appointment> addAppointments(List<Appointment> appointments)` - create a new appointments.
- :code:`void removeAppointment(String appointmentId)` - remove appointment with given ID, and remove reminder created for it.
- :code:`void removeAppointments(List<String> appointmentId)` - remove appointments with given IDs.
- :code:`Appointment updateAppointment(Appointment appointment)` - update an appointment.
- :code:`List<Appointment> updateAppointments(List<Appointment> appointments)` - updates the list of appointments.
- :code:`Appointment getAppointment(String appointmentId)` - get the appointment with given ID.
- :code:`List<Appointment> findAppointmentsByExternalId(String externalId)` - get the appointments which are associated with person externalId.
- :code:`List<Appointment> findAppointmentsByExternalId(String externalId, AppointmentStatus status)` - get the appointments which are associated with person externalId and which have given status.
- :code:`void toggleReminders(String externalId, boolean sendReminders)` - toggle the reminders for a patient with externalId. If sendReminders == true then send reminders for patient, otherwise stop reminders for patient.

.. _new-appointment-label:

The following is an example of creating a new appointment.

.. code-block:: java

    Appointment appointment = new Appointment();
    DateTime reminderStartTime = DateTime.now().plusDays(1); // start send events tomorrow
    DateTime appointmentDate = new DateTime(2014, 6, 30, 17, 0, 0, 0); // 2014-06-30 17:00:00
    Period reminderInterval = new Period(24, 0, 0, 0); //reminder will be sent every 24 hours from reminderStartTime to appointmentDate

    appointment.setExternalId(patientID);
    appointment.setStatus(AppointmentStatus.CONFIRMED); // Visit is confirmed
    appointment.setReminderStartTime(reminderStartTime);
    appointment.setAppointmentDate(appointmentDate);
    appointment.setReminderInterval(reminderInterval);
    appointment.setSendReminders(true); // Enable reminders

    appointmentService.addAppointment(appointment); // add new appointment

#############
Configuration
#############

This module does not require any custom configuration.